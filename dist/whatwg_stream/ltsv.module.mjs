function r(r,e){if(void 0===r)throw new TypeError("chunk is undefined");var n=r.indexOf(":");if(-1===n)throw new SyntaxError('field separator is not found: "'+r+'"');var t=r.slice(0,n),i=r.slice(n+1);if(e&&!function(r){return/^[0-9A-Za-z_.-]+$/.test(r)}(t))throw new SyntaxError('unexpected character in label: "'+t+'"');if(e&&!function(r){return/^[\x01-\x08\x0B\x0C\x0E-\xFF]*$/.test(r)}(i))throw new SyntaxError('unexpected character in value: "'+i+'"');return{label:t,value:i}}function e(e,n){for(var t=String(e).replace(/(?:\r?\n)+$/,"").split("\t"),i={},o=0,f=t.length;o<f;++o){var a=r(t[o],n);i[a.label]=a.value}return i}function n(r){return e(r,!1)}function t(r){return e(r,!0)}function i(r,e,n){for(var t=0,i=0,o=null;;){var f=r.indexOf("\n",t);if(-1===f){if(!(e&&t<r.length))break;f=r.length-1}var a=r.slice(t,f+1),u={};try{u=this.parse(a)}catch(r){r instanceof Error&&(o=r)}if(o)break;n.enqueue(this.objectMode?u:JSON.stringify(u)),i=t=f+1}this.buffer=r.slice(i),o&&n.error(o)}function o(r){void 0===r&&(r={objectMode:!1,strict:!1});var e=r.objectMode,o=r.strict,f={buffer:"",objectMode:void 0!==e&&e,parse:void 0!==o&&o?t:n};return{transform:function(r,e){i.call(f,f.buffer+r,!1,e)},flush:function(r){i.call(f,f.buffer,!0,r)}}}function f(r){return new TransformStream(o(r))}export{o as LtsvToJsonStream,f as createLtsvToJsonStream};
//# sourceMappingURL=ltsv.module.mjs.map
