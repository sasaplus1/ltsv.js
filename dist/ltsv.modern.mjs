function t(t){return/^[0-9A-Za-z_.-]+$/.test(t)}function n(t){return/^[\x01-\x08\x0B\x0C\x0E-\xFF]*$/.test(t)}function r(r,e){if(null===r||"object"!=typeof r)throw new TypeError("record must be an Object");const o=Object.keys(r),c=[];for(let u=0,i=o.length;u<i;++u){const i=o[u],a=r[o[u]];if(e&&!t(i))throw new SyntaxError(`unexpected character in label: "${i}"`);if(e&&!n(a))throw new SyntaxError(`unexpected character in value: "${a}"`);c[u]=i+":"+a}return c.join("\t")}function e(t,n){const e=Array.isArray(t);if(!e&&(null===t||"object"!=typeof t))throw new TypeError("data must be an Object or Array");const o=[];if(e)for(let e=0,c=t.length;e<c;++e)o[e]=r(t[e],n);else o.push(r(t,n));return o.join("\n")}function o(t){return e(t,!1)}function c(t){return e(t,!0)}function u(t,n={strict:!1}){const{strict:r=!1}=n;return e(t,r)}function i(r,e){const o=String(r),c=o.indexOf(":");if(-1===c)throw new SyntaxError(`field separator is not found: "${o}"`);const u=o.slice(0,c),i=o.slice(c+1);if(e&&!t(u))throw new SyntaxError(`unexpected character in label: "${u}"`);if(e&&!n(i))throw new SyntaxError(`unexpected character in value: "${i}"`);return{label:u,value:i}}function a(t,n){const r=String(t).replace(/(?:\r?\n)+$/,"").split("\t"),e={};for(let t=0,o=r.length;t<o;++t){const{label:o,value:c}=i(r[t],n);e[o]=c}return e}function l(t,n){const r=String(t).replace(/(?:\r?\n)+$/,"").split(/\r?\n/),e=[];for(let t=0,o=r.length;t<o;++t)e[t]=a(r[t],n);return e}function f(t){return l(t,!1)}function s(t){return a(t,!1)}function x(t){return l(t,!0)}function h(t){return a(t,!0)}export{o as format,c as formatStrict,t as isValidLabel,n as isValidValue,f as parse,s as parseLine,h as parseLineStrict,x as parseStrict,u as stringify};
//# sourceMappingURL=ltsv.modern.mjs.map
